package com.OS3.iscorebridge


fun calculateVulnerability(boardNumber: Int) : Vulnerability{
    return when(boardNumber % 4){
        0->Vulnerability(CARDINALITIES)
        1-> Vulnerability(arrayOf())
        2-> Vulnerability(arrayOf(NORTH, SOUTH))
        3-> Vulnerability(arrayOf(EAST, WEST))
        else -> Vulnerability(arrayOf())
    }
}

class Vulnerability {
    private var north: Boolean = false
    private var east: Boolean = false
    private var south: Boolean = false
    private var west: Boolean = false
    private val dlm = ","
    constructor(vulnerable:Array<Cardinality>){
        for (position in vulnerable){
            when(position){
                NORTH -> north = true
                EAST -> east = true
                SOUTH -> south = true
                WEST -> west = true
            }
        }
    }

    constructor(vulnerability: String){
        val vulnerabilities = vulnerability.split(",")
        val vulnerabilitiesAsChar = ArrayList<Char>()
        for(vul in vulnerabilities){
            vulnerabilitiesAsChar.add(vul[0])
        }
        for (position in vulnerabilitiesAsChar.toTypedArray()){
            when(position){
                'N' -> north = true
                'E' -> east = true
                'S' -> south = true
                'W' -> west = true
            }
        }
    }

    fun isVulnerable(position: Cardinality) : Boolean{
        when(position){
            NORTH -> return north
            EAST -> return east
            SOUTH -> return south
            WEST -> return west
        }
        return false
    }

    override fun toString() : String{
        var out = ""
        if(north){
            out += "N$dlm"
        }
        if(east){
            out += "E$dlm"
        }
        if(south){
            out += "S$dlm"
        }
        if(west){
            out += "W$dlm"
        }
        return out.substring(0, out.length - dlm.length)
    }
}